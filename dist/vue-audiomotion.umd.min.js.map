{"version":3,"sources":["webpack://vue-audiomotion/webpack/universalModuleDefinition","webpack://vue-audiomotion/webpack/bootstrap","webpack://vue-audiomotion/./node_modules/@soda/get-current-script/index.js","webpack://vue-audiomotion/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://vue-audiomotion/./src/components/AudioMotion.vue?0c72","webpack://vue-audiomotion/./node_modules/audiomotion-analyzer/dist/audioMotion-analyzer.js","webpack://vue-audiomotion/src/components/AudioMotion.vue","webpack://vue-audiomotion/./src/components/AudioMotion.vue?bfa4","webpack://vue-audiomotion/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://vue-audiomotion/./src/components/AudioMotion.vue","webpack://vue-audiomotion/./src/components/index.js","webpack://vue-audiomotion/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getCurrentScript","document","currentScript","Error","err","pageSource","inlineScriptSourceRegExp","inlineScriptSource","ieStackRegExp","ffStackRegExp","stackDetails","exec","stack","scriptLocation","line","currentLocation","location","href","replace","hash","scripts","getElementsByTagName","documentElement","outerHTML","RegExp","trim","length","readyState","src","innerHTML","window","match","render","_vm","_h","$createElement","_c","_self","ref","_uid","staticRenderFns","_VERSION","AudioMotionAnalyzer","container","options","_initDone","defaults","fftSize","minFreq","maxFreq","smoothing","gradient","minDecibels","maxDecibels","showBgColor","showLeds","showScale","showPeaks","showFPS","lumiBars","loRes","reflexRatio","reflexAlpha","reflexFit","lineWidth","fillAlpha","barSpace","start","_gradients","classic","bgColor","colorStops","pos","color","prism","rainbow","dir","_container","body","_defaultWidth","clientWidth","_defaultHeight","clientHeight","AudioContext","webkitAudioContext","audioCtx","AudioMotionError","_audioCtx","_analyzer","createAnalyser","_audioSource","connectAudio","source","undefined","connect","destination","_canvas","createElement","style","appendChild","_canvasCtx","getContext","alpha","_ledsMask","_ledsCtx","_labels","_labelsCtx","addEventListener","_width","_height","_setCanvas","_setProperties","_barSpace","Number","_calculateBarSpacePx","_createLedMask","_dataArray","Uint8Array","frequencyBinCount","_precalculateBarPositions","_gradient","h","w","_mode","_reflexRatio","_generateGradients","_loRes","Boolean","_lumiBars","_minFreq","_maxFreq","smoothingTimeConstant","_fsWidth","_fsHeight","_fps","fullscreenElement","webkitFullscreenElement","_animationReq","_pixelRatio","element","audioSource","createMediaElementSource","min","max","Math","started","isOn","cancelAnimationFrame","_frame","_time","performance","now","requestAnimationFrame","timestamp","_draw","isFullscreen","exitFullscreen","webkitExitFullscreen","requestFullscreen","webkitRequestFullscreen","_barSpacePx","_barWidth","analyzerHeight","height","nLeds","spaceV","_ledOptions","spaceH","ledHeight","spacing","width","_analyzerBars","forEach","bar","fillRect","posX","isOctaveBands","isLedDisplay","isLumiBars","fillStyle","getByteFrequencyData","beginPath","moveTo","barHeight","nBars","endIdx","dataIdx","factor","j","globalAlpha","peak","hold","accel","adjWidth","lineTo","strokeStyle","stroke","fill","drawImage","posY","setTransform","elapsed","size","font","textAlign","fillText","round","onCanvasDraw","save","restore","freq","func","bin","sampleRate","includes","grad","keys","createLinearGradient","colorInfo","index","addColorStop","minLog","bandWidth","log10","minIndex","_findFrequencyBin","maxIndex","lastPos","_findBinFrequency","push","groupNotes","root24","c0","temperedScale","prevBin","prevIdx","idx","nextBin","freqLabels","reason","devicePixelRatio","screen","lineJoin","onCanvasResize","callbacks","ignore","assign","prop","indexOf","toggleAnalyzer","code","message","super","props","watch","stream","getAudioTracks","createMediaStreamSource","sourceMic","audioMotion","analyzer","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","concat","component","AudioMotion"],"mappings":"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","file":"vue-audiomotion.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-audiomotion\"] = factory();\n\telse\n\t\troot[\"vue-audiomotion\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    if (document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:'audioMotion-' + this._uid})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*!\r\n * audioMotion-analyzer\r\n * High-resolution real-time graphic audio spectrum analyzer JS module\r\n *\r\n * @version 2.1.0\r\n * @author  Henrique Avila Vianna <hvianna@gmail.com> <https://henriquevianna.com>\r\n * @license AGPL-3.0-or-later\r\n */\r\n\r\nconst _VERSION = '2.1.0';\r\n\r\nexport default class AudioMotionAnalyzer {\r\n\r\n/**\r\n * CONSTRUCTOR\r\n *\r\n * @param {object} [container] DOM element where to insert the analyzer; if undefined, uses the document body\r\n * @param {object} [options]\r\n * @returns {object} AudioMotionAnalyzer object\r\n */\r\n\tconstructor( container, options = {} ) {\r\n\r\n\t\tthis._initDone = false;\r\n\r\n\t\t// Settings defaults\r\n\r\n\t\tconst defaults = {\r\n\t\t\tmode        : 0,\r\n\t\t\tfftSize     : 8192,\r\n\t\t\tminFreq     : 20,\r\n\t\t\tmaxFreq     : 22000,\r\n\t\t\tsmoothing   : 0.5,\r\n\t\t\tgradient    : 'classic',\r\n\t\t\tminDecibels : -85,\r\n\t\t\tmaxDecibels : -25,\r\n\t\t\tshowBgColor : true,\r\n\t\t\tshowLeds    : false,\r\n\t\t\tshowScale   : true,\r\n\t\t\tshowPeaks   : true,\r\n\t\t\tshowFPS     : false,\r\n\t\t\tlumiBars    : false,\r\n\t\t\tloRes       : false,\r\n\t\t\treflexRatio : 0,\r\n\t\t\treflexAlpha : 0.15,\r\n\t\t\treflexFit   : true,\r\n\t\t\tlineWidth   : 0,\r\n\t\t\tfillAlpha   : 1,\r\n\t\t\tbarSpace    : 0.1,\r\n\t\t\tstart       : true\r\n\t\t};\r\n\r\n\t\t// Gradient definitions\r\n\r\n\t\tthis._gradients = {\r\n\t\t\tclassic: {\r\n\t\t\t\tbgColor: '#111',\r\n\t\t\t\tcolorStops: [\r\n\t\t\t\t\t'hsl( 0, 100%, 50% )',\r\n\t\t\t\t\t{ pos: .6, color: 'hsl( 60, 100%, 50% )' },\r\n\t\t\t\t\t'hsl( 120, 100%, 50% )'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tprism:   {\r\n\t\t\t\tbgColor: '#111',\r\n\t\t\t\tcolorStops: [\r\n\t\t\t\t\t'hsl( 0, 100%, 50% )',\r\n\t\t\t\t\t'hsl( 60, 100%, 50% )',\r\n\t\t\t\t\t'hsl( 120, 100%, 50% )',\r\n\t\t\t\t\t'hsl( 180, 100%, 50% )',\r\n\t\t\t\t\t'hsl( 240, 100%, 50% )',\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\trainbow: {\r\n\t\t\t\tbgColor: '#111',\r\n\t\t\t\tdir: 'h',\r\n\t\t\t\tcolorStops: [\r\n\t\t\t\t\t'hsl( 0, 100%, 50% )',\r\n\t\t\t\t\t'hsl( 60, 100%, 50% )',\r\n\t\t\t\t\t'hsl( 120, 100%, 50% )',\r\n\t\t\t\t\t'hsl( 180, 100%, 47% )',\r\n\t\t\t\t\t'hsl( 240, 100%, 58% )',\r\n\t\t\t\t\t'hsl( 300, 100%, 50% )',\r\n\t\t\t\t\t'hsl( 360, 100%, 50% )'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\t// Set container\r\n\t\tthis._container = container || document.body;\r\n\r\n\t\t// Make sure we have minimal width and height dimensions in case of an inline container\r\n\t\tthis._defaultWidth  = this._container.clientWidth  || 640;\r\n\t\tthis._defaultHeight = this._container.clientHeight || 270;\r\n\r\n\t\t// Use audio context provided by user, or create a new one\r\n\r\n\t\tconst AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n\t\tif ( options.hasOwnProperty( 'audioCtx' ) ) {\r\n\t\t\tif ( options.audioCtx instanceof AudioContext )\r\n\t\t\t\tthis._audioCtx = options.audioCtx;\r\n\t\t\telse\r\n\t\t\t\tthrow new AudioMotionError( 'ERR_INVALID_AUDIO_CONTEXT', 'Provided audio context is not valid' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttry {\r\n\t\t\t\tthis._audioCtx = new AudioContext();\r\n\t\t\t}\r\n\t\t\tcatch( err ) {\r\n\t\t\t\tthrow new AudioMotionError( 'ERR_AUDIO_CONTEXT_FAIL', 'Could not create audio context. Web Audio API not supported?' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create analyzer node, connect audio source (if provided) and connect it to the destination\r\n\r\n\t\tthis._analyzer = this._audioCtx.createAnalyser();\r\n\t\tthis._audioSource = ( options.source ) ? this.connectAudio( options.source ) : undefined;\r\n\t\tthis._analyzer.connect( this._audioCtx.destination );\r\n\r\n\t\t// Create canvases\r\n\r\n\t\t// main spectrum analyzer canvas\r\n\t\tthis._canvas = document.createElement('canvas');\r\n\t\tthis._canvas.style = 'max-width: 100%;';\r\n\t\tthis._container.appendChild( this._canvas );\r\n\t\tthis._canvasCtx = this._canvas.getContext( '2d', { alpha: false } );\r\n\r\n\t\t// auxiliary canvas for the LED mask\r\n\t\tthis._ledsMask = document.createElement('canvas');\r\n\t\tthis._ledsCtx = this._ledsMask.getContext('2d');\r\n\r\n\t\t// auxiliary canvas for the X-axis scale labels\r\n\t\tthis._labels = document.createElement('canvas');\r\n\t\tthis._labelsCtx = this._labels.getContext('2d');\r\n\r\n\t\t// adjust canvas on window resize\r\n\t\twindow.addEventListener( 'resize', () => {\r\n\t\t\tif ( ! this._width || ! this._height ) // fluid width or height\r\n\t\t\t\tthis._setCanvas('resize');\r\n\t\t});\r\n\r\n\t\t// adjust canvas size on fullscreen change\r\n\t\tthis._canvas.addEventListener( 'fullscreenchange', () => this._setCanvas('fschange') );\r\n\r\n\t\t// Set configuration options, using defaults for any missing properties\r\n\r\n\t\tthis._setProperties( options, defaults );\r\n\r\n\t\t// Finish canvas setup\r\n\r\n\t\tthis._initDone = true;\r\n\t\tthis._setCanvas('create');\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t *\r\n\t * PUBLIC PROPERTIES GETTERS AND SETTERS\r\n\t *\r\n\t * ==========================================================================\r\n\t */\r\n\r\n\t// Bar spacing (for octave bands modes)\r\n\r\n\tget barSpace() {\r\n\t\treturn this._barSpace;\r\n\t}\r\n\tset barSpace( value ) {\r\n\t\tthis._barSpace = Number( value );\r\n\t\tthis._calculateBarSpacePx();\r\n\t\tthis._createLedMask();\r\n\t}\r\n\r\n\t// FFT size\r\n\r\n\tget fftSize() {\r\n\t\treturn this._analyzer.fftSize;\r\n\t}\r\n\tset fftSize( value ) {\r\n\t\tthis._analyzer.fftSize = value;\r\n\t\tthis._dataArray = new Uint8Array( this._analyzer.frequencyBinCount );\r\n\t\tthis._precalculateBarPositions();\r\n\t}\r\n\r\n\t// Gradient\r\n\r\n\tget gradient() {\r\n\t\treturn this._gradient;\r\n\t}\r\n\tset gradient( value ) {\r\n\t\tif ( this._gradients.hasOwnProperty( value ) )\r\n\t\t\tthis._gradient = value;\r\n\t\telse\r\n\t\t\tthrow new AudioMotionError( 'ERR_UNKNOWN_GRADIENT', `Unknown gradient: '${value}'` );\r\n\t}\r\n\r\n\t// Canvas size\r\n\r\n\tget height() {\r\n\t\treturn this._height;\r\n\t}\r\n\tset height( h ) {\r\n\t\tthis._height = h;\r\n\t\tthis._setCanvas('user');\r\n\t}\r\n\tget width() {\r\n\t\treturn this._width;\r\n\t}\r\n\tset width( w ) {\r\n\t\tthis._width = w;\r\n\t\tthis._setCanvas('user');\r\n\t}\r\n\r\n\t// Visualization mode\r\n\r\n\tget mode() {\r\n\t\treturn this._mode;\r\n\t}\r\n\tset mode( value ) {\r\n\t\tconst mode = Number( value );\r\n\t\tif ( mode >= 0 && mode <= 10 && mode != 9 ) {\r\n\t\t\tthis._mode = mode;\r\n\t\t\tthis._precalculateBarPositions();\r\n\t\t\tif ( this._reflexRatio > 0 )\r\n\t\t\t\tthis._generateGradients();\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new AudioMotionError( 'ERR_INVALID_MODE', `Invalid mode: ${mode}` );\r\n\t}\r\n\r\n\t// Low-resolution mode\r\n\r\n\tget loRes() {\r\n\t\treturn this._loRes;\r\n\t}\r\n\tset loRes( value ) {\r\n\t\tthis._loRes = Boolean( value );\r\n\t\tthis._setCanvas('lores');\r\n\t}\r\n\r\n\tget lumiBars() {\r\n\t\treturn this._lumiBars;\r\n\t}\r\n\tset lumiBars( value ) {\r\n\t\tthis._lumiBars = Boolean( value );\r\n\t\tif ( this._reflexRatio > 0 ) {\r\n\t\t\tthis._generateGradients();\r\n\t\t\tthis._createLedMask();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reflex\r\n\r\n\tget reflexRatio() {\r\n\t\treturn this._reflexRatio;\r\n\t}\r\n\tset reflexRatio( value ) {\r\n\t\tvalue = Number( value );\r\n\t\tif ( value < 0 || value >= 1 )\r\n\t\t\tthrow new AudioMotionError( 'ERR_REFLEX_OUT_OF_RANGE', `Reflex ratio must be >= 0 and < 1` );\r\n\t\telse {\r\n\t\t\tthis._reflexRatio = value;\r\n\t\t\tthis._generateGradients();\r\n\t\t\tthis._createLedMask();\r\n\t\t}\r\n\t}\r\n\r\n\t// Current frequency range\r\n\r\n\tget minFreq() {\r\n\t\treturn this._minFreq;\r\n\t}\r\n\tset minFreq( value ) {\r\n\t\tif ( value < 1 )\r\n\t\t\tthrow new AudioMotionError( 'ERR_FREQUENCY_TOO_LOW', `Frequency values must be >= 1` );\r\n\t\telse {\r\n\t\t\tthis._minFreq = value;\r\n\t\t\tthis._precalculateBarPositions();\r\n\t\t}\r\n\t}\r\n\tget maxFreq() {\r\n\t\treturn this._maxFreq;\r\n\t}\r\n\tset maxFreq( value ) {\r\n\t\tif ( value < 1 )\r\n\t\t\tthrow new AudioMotionError( 'ERR_FREQUENCY_TOO_LOW', `Frequency values must be >= 1` );\r\n\t\telse {\r\n\t\t\tthis._maxFreq = value;\r\n\t\t\tthis._precalculateBarPositions();\r\n\t\t}\r\n\t}\r\n\r\n\t// Analyzer's sensitivity\r\n\r\n\tget minDecibels() {\r\n\t\treturn this._analyzer.minDecibels;\r\n\t}\r\n\tset minDecibels( value ) {\r\n\t\tthis._analyzer.minDecibels = value;\r\n\t}\r\n\tget maxDecibels() {\r\n\t\treturn this._analyzer.maxDecibels;\r\n\t}\r\n\tset maxDecibels( value ) {\r\n\t\tthis._analyzer.maxDecibels = value;\r\n\t}\r\n\r\n\t// Analyzer's smoothing time constant\r\n\r\n\tget smoothing() {\r\n\t\treturn this._analyzer.smoothingTimeConstant;\r\n\t}\r\n\tset smoothing( value ) {\r\n\t\tthis._analyzer.smoothingTimeConstant = value;\r\n\t}\r\n\r\n\t// Read only properties\r\n\r\n\tget analyzer() {\r\n\t\treturn this._analyzer;\r\n\t}\r\n\tget audioCtx() {\r\n\t\treturn this._audioCtx;\r\n\t}\r\n\tget audioSource() {\r\n\t\treturn this._audioSource;\r\n\t}\r\n\tget canvas() {\r\n\t\treturn this._canvas;\r\n\t}\r\n\tget canvasCtx() {\r\n\t\treturn this._canvasCtx;\r\n\t}\r\n\tget dataArray() {\r\n\t\treturn this._dataArray;\r\n\t}\r\n\tget fsWidth() {\r\n\t\treturn this._fsWidth;\r\n\t}\r\n\tget fsHeight() {\r\n\t\treturn this._fsHeight;\r\n\t}\r\n\tget fps() {\r\n\t\treturn this._fps;\r\n\t}\r\n\tget isFullscreen() {\r\n\t\tif ( document.fullscreenElement )\r\n\t\t\treturn document.fullscreenElement === this._canvas;\r\n\t\telse if ( document.webkitFullscreenElement )\r\n\t\t\treturn document.webkitFullscreenElement === this._canvas;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\tget isOn() {\r\n\t\treturn this._animationReq !== undefined;\r\n\t}\r\n\tget pixelRatio() {\r\n\t\treturn this._pixelRatio;\r\n\t}\r\n\tget version() {\r\n\t\treturn _VERSION;\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n     *\r\n\t * PUBLIC METHODS\r\n\t *\r\n\t * ==========================================================================\r\n\t */\r\n\r\n\t/**\r\n\t * Connect HTML audio element to analyzer\r\n\t *\r\n\t * @param {object} element HTML audio element\r\n\t * @returns {object} a MediaElementAudioSourceNode object\r\n\t */\r\n\tconnectAudio( element ) {\r\n\t\tconst audioSource = this._audioCtx.createMediaElementSource( element );\r\n\t\taudioSource.connect( this._analyzer );\r\n\t\treturn audioSource;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a custom gradient\r\n\t *\r\n\t * @param {string} name\r\n\t * @param {object} options\r\n\t */\r\n\tregisterGradient( name, options ) {\r\n\t\tif ( typeof name !== 'string' || name.trim().length == 0 )\r\n\t\t\tthrow new AudioMotionError( 'ERR_GRADIENT_INVALID_NAME', 'Gradient name must be a non-empty string' );\r\n\r\n\t\tif ( typeof options !== 'object' )\r\n\t\t\tthrow new AudioMotionError( 'ERR_GRADIENT_NOT_AN_OBJECT', 'Gradient options must be an object' );\r\n\r\n\t\tif ( options.colorStops === undefined || options.colorStops.length < 2 )\r\n\t\t\tthrow new AudioMotionError( 'ERR_GRADIENT_MISSING_COLOR', 'Gradient must define at least two colors' );\r\n\r\n\t\tthis._gradients[ name ] = {};\r\n\r\n\t\tif ( options.bgColor !== undefined )\r\n\t\t\tthis._gradients[ name ].bgColor = options.bgColor;\r\n\t\telse\r\n\t\t\tthis._gradients[ name ].bgColor = '#111';\r\n\r\n\t\tif ( options.dir !== undefined )\r\n\t\t\tthis._gradients[ name ].dir = options.dir;\r\n\r\n\t\tthis._gradients[ name ].colorStops = options.colorStops;\r\n\r\n\t\tthis._generateGradients();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dimensions of analyzer's canvas\r\n\t *\r\n\t * @param {number} w width in pixels\r\n\t * @param {number} h height in pixels\r\n\t */\r\n\tsetCanvasSize( w, h ) {\r\n\t\tthis._width = w;\r\n\t\tthis._height = h;\r\n\t\tthis._setCanvas('user');\r\n\t}\r\n\r\n\t/**\r\n\t * Set desired frequency range\r\n\t *\r\n\t * @param {number} min lowest frequency represented in the x-axis\r\n\t * @param {number} max highest frequency represented in the x-axis\r\n\t */\r\n\tsetFreqRange( min, max ) {\r\n\t\tif ( min < 1 || max < 1 )\r\n\t\t\tthrow new AudioMotionError( 'ERR_FREQUENCY_TOO_LOW', `Frequency values must be >= 1` );\r\n\t\telse {\r\n\t\t\tthis._minFreq = Math.min( min, max );\r\n\t\t\tthis._maxFreq = Math.max( min, max );\r\n\t\t\tthis._precalculateBarPositions();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shorthand function for setting several options at once\r\n\t *\r\n\t * @param {object} options\r\n\t */\r\n\tsetOptions( options ) {\r\n\t\tthis._setProperties( options );\r\n\t}\r\n\r\n\t/**\r\n\t * Adjust the analyzer's sensitivity\r\n\t *\r\n\t * @param {number} min minimum decibels value\r\n\t * @param {number} max maximum decibels value\r\n\t */\r\n\tsetSensitivity( min, max ) {\r\n\t\tthis._analyzer.minDecibels = Math.min( min, max );\r\n\t\tthis._analyzer.maxDecibels = Math.max( min, max );\r\n\t}\r\n\r\n\t/**\r\n\t * Start / stop canvas animation\r\n\t *\r\n\t * @param {boolean} [value] if undefined, inverts the current status\r\n\t * @returns {boolean} resulting status after the change\r\n\t */\r\n\ttoggleAnalyzer( value ) {\r\n\t\tconst started = this.isOn;\r\n\r\n\t\tif ( value === undefined )\r\n\t\t\tvalue = ! started;\r\n\r\n\t\tif ( started && ! value ) {\r\n\t\t\tcancelAnimationFrame( this._animationReq );\r\n\t\t\tthis._animationReq = undefined;\r\n\t\t}\r\n\t\telse if ( ! started && value ) {\r\n\t\t\tthis._frame = this._fps = 0;\r\n\t\t\tthis._time = performance.now();\r\n\t\t\tthis._animationReq = requestAnimationFrame( timestamp => this._draw( timestamp ) );\r\n\t\t}\r\n\r\n\t\treturn this.isOn;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles canvas full-screen mode\r\n\t */\r\n\ttoggleFullscreen() {\r\n\t\tif ( this.isFullscreen ) {\r\n\t\t\tif ( document.exitFullscreen )\r\n\t\t\t\tdocument.exitFullscreen();\r\n\t\t\telse if ( document.webkitExitFullscreen )\r\n\t\t\t\tdocument.webkitExitFullscreen();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ( this._canvas.requestFullscreen )\r\n\t\t\t\tthis._canvas.requestFullscreen();\r\n\t\t\telse if ( this._canvas.webkitRequestFullscreen )\r\n\t\t\t\tthis._canvas.webkitRequestFullscreen();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t *\r\n\t * PRIVATE METHODS\r\n\t *\r\n\t * ==========================================================================\r\n\t */\r\n\r\n\t/**\r\n\t * Calculate bar spacing in pixels\r\n\t */\r\n\t_calculateBarSpacePx() {\r\n\t\tthis._barSpacePx = Math.min( this._barWidth - 1, ( this._barSpace > 0 && this._barSpace < 1 ) ? this._barWidth * this._barSpace : this._barSpace );\r\n\t}\r\n\r\n\t/**\r\n\t * Create mask for vintage LED effect on auxiliary canvas\r\n\t */\r\n\t_createLedMask() {\r\n\t\t// no need for this if in discrete frequencies or area fill modes\r\n\t\tif ( this._mode % 10 == 0 || ! this._initDone )\r\n\t\t\treturn;\r\n\r\n\t\tconst analyzerHeight = this._lumiBars ? this._canvas.height : this._canvas.height * ( 1 - this._reflexRatio ) | 0;\r\n\r\n\t\t// calculates the best attributes for the LEDs effect, based on the visualization mode and canvas resolution\r\n\r\n\t\tlet spaceV = Math.min( 6, analyzerHeight / ( 90 * this._pixelRatio ) | 0 ); // for modes 3, 4, 5 and 6\r\n\t\tlet nLeds;\r\n\r\n\t\tswitch ( this._mode ) {\r\n\t\t\tcase 8:\r\n\t\t\t\tspaceV = Math.min( 16, analyzerHeight / ( 33 * this._pixelRatio ) | 0 );\r\n\t\t\t\tnLeds = 24;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tspaceV = Math.min( 8, analyzerHeight / ( 67 * this._pixelRatio ) | 0 );\r\n\t\t\t\tnLeds = 48;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tnLeds = 64;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\t// fall through\r\n\t\t\tcase 4:\r\n\t\t\t\tnLeds = 80;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tnLeds = 96;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tspaceV = Math.min( 4, analyzerHeight / ( 135 * this._pixelRatio ) | 0 );\r\n\t\t\t\tnLeds = 128;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tspaceV = Math.min( 3, Math.max( 2, analyzerHeight / ( 180 * this._pixelRatio ) | 0 ) );\r\n\t\t\t\tnLeds = 128;\r\n\t\t}\r\n\r\n\t\tspaceV *= this._pixelRatio;\r\n\t\tnLeds = Math.min( nLeds, ( analyzerHeight + spaceV ) / ( spaceV * 2 ) | 0 );\r\n\r\n\t\tthis._ledOptions = {\r\n\t\t\tnLeds,\r\n\t\t\tspaceH: this._barWidth * ( this._mode == 1 ? .45 : this._mode < 5 ? .225 : .125 ),\r\n\t\t\tspaceV,\r\n\t\t\tledHeight: ( analyzerHeight + spaceV ) / nLeds - spaceV\r\n\t\t};\r\n\r\n\t\t// use either the LEDs default horizontal space or the user selected bar space, whichever is larger\r\n\t\tconst spacing = Math.max( this._ledOptions.spaceH, this._barSpacePx );\r\n\r\n\t\t// clear the auxiliary canvas\r\n\t\tthis._ledsMask.width |= 0;\r\n\r\n\t\t// add a vertical black line to the left of each bar to create the LED columns\r\n\t\tthis._analyzerBars.forEach( bar => this._ledsCtx.fillRect( bar.posX - spacing / 2, 0, spacing, analyzerHeight ) );\r\n\r\n\t\t// add a vertical black line in the mask canvas after the last led column\r\n\t\tthis._ledsCtx.fillRect( this._analyzerBars[ this._analyzerBars.length - 1 ].posX + this._barWidth - spacing / 2, 0, spacing, analyzerHeight );\r\n\r\n\t\t// add horizontal black lines to create the LED rows\r\n\t\tfor ( let i = this._ledOptions.ledHeight; i < analyzerHeight; i += this._ledOptions.ledHeight + this._ledOptions.spaceV )\r\n\t\t\tthis._ledsCtx.fillRect( 0, i, this._canvas.width, this._ledOptions.spaceV );\r\n\t}\r\n\r\n\t/**\r\n\t * Redraw the canvas\r\n\t * this is called 60 times per second by requestAnimationFrame()\r\n\t */\r\n\t_draw( timestamp ) {\r\n\r\n\t\tconst isOctaveBands  = ( this._mode % 10 != 0 ), // mode > 0 && mode < 10\r\n\t\t\t  isLedDisplay   = ( this.showLeds  && isOctaveBands ),\r\n\t\t\t  isLumiBars     = ( this._lumiBars && isOctaveBands ),\r\n\t\t\t  analyzerHeight = this._canvas.height * ( 1 - this._reflexRatio ) | 0;\r\n\r\n\t\tif ( ! this.showBgColor )\t// use black background\r\n\t\t\tthis._canvasCtx.fillStyle = '#000';\r\n\t\telse\r\n\t\t\tif ( isLedDisplay )\r\n\t\t\t\tthis._canvasCtx.fillStyle = '#111';\r\n\t\t\telse\r\n\t\t\t\tthis._canvasCtx.fillStyle = this._gradients[ this._gradient ].bgColor; // use background color defined by gradient\r\n\r\n\t\t// clear the canvas\r\n\t\tthis._canvasCtx.fillRect( 0, 0, this._canvas.width, this._canvas.height );\r\n\r\n\t\t// get a new array of data from the FFT\r\n\t\tthis._analyzer.getByteFrequencyData( this._dataArray );\r\n\r\n\t\t// set selected gradient\r\n\t\tthis._canvasCtx.fillStyle = this._gradients[ this._gradient ].gradient;\r\n\r\n\t\t// if in \"area fill\" mode, start the drawing path\r\n\t\tif ( this._mode == 10 ) {\r\n\t\t\tthis._canvasCtx.beginPath();\r\n\t\t\tthis._canvasCtx.moveTo( -this.lineWidth, analyzerHeight );\r\n\t\t}\r\n\r\n\t\t// compute the effective bar width, considering the selected bar spacing\r\n\t\t// if led effect is active, ensure at least the spacing defined by the led options\r\n\t\tlet width = this._barWidth - ( ! isOctaveBands ? 0 : Math.max( isLedDisplay ? this._ledOptions.spaceH : 0, this._barSpacePx ) );\r\n\r\n\t\t// if no bar spacing is required, make sure width is integer for pixel accurate calculation\r\n\t\tif ( this._barSpace == 0 && ! isLedDisplay )\r\n\t\t\twidth |= 0;\r\n\r\n\t\t// draw bars / lines\r\n\r\n\t\tlet bar, barHeight;\r\n\t\tconst nBars = this._analyzerBars.length;\r\n\r\n\t\tfor ( let i = 0; i < nBars; i++ ) {\r\n\r\n\t\t\tbar = this._analyzerBars[ i ];\r\n\r\n\t\t\tif ( bar.endIdx == 0 ) { // single FFT bin\r\n\t\t\t\tbarHeight = this._dataArray[ bar.dataIdx ];\r\n\t\t\t\t// apply smoothing factor when several bars share the same bin\r\n\t\t\t\tif ( bar.factor )\r\n\t\t\t\t\tbarHeight += ( this._dataArray[ bar.dataIdx + 1 ] - barHeight ) * bar.factor;\r\n\t\t\t}\r\n\t\t\telse { \t\t\t\t\t// range of bins\r\n\t\t\t\tbarHeight = 0;\r\n\t\t\t\t// use the highest value in the range\r\n\t\t\t\tfor ( let j = bar.dataIdx; j <= bar.endIdx; j++ )\r\n\t\t\t\t\tbarHeight = Math.max( barHeight, this._dataArray[ j ] );\r\n\t\t\t}\r\n\r\n\t\t\t// set opacity for lumi bars before barHeight value is normalized\r\n\t\t\tif ( isLumiBars )\r\n\t\t\t\tthis._canvasCtx.globalAlpha = barHeight / 255;\r\n\r\n\t\t\tif ( isLedDisplay ) // normalize barHeight to match one of the \"led\" elements\r\n\t\t\t\tbarHeight = ( barHeight / 255 * this._ledOptions.nLeds | 0 ) * ( this._ledOptions.ledHeight + this._ledOptions.spaceV ) - this._ledOptions.spaceV;\r\n\t\t\telse\r\n\t\t\t\tbarHeight = barHeight / 255 * analyzerHeight | 0;\r\n\r\n\t\t\tif ( barHeight >= bar.peak ) {\r\n\t\t\t\tbar.peak = barHeight;\r\n\t\t\t\tbar.hold = 30; // set peak hold time to 30 frames (0.5s)\r\n\t\t\t\tbar.accel = 0;\r\n\t\t\t}\r\n\r\n\t\t\tlet posX = bar.posX;\r\n\t\t\tlet adjWidth = width; // bar width may need small adjustments for some bars, when barSpace == 0\r\n\r\n\t\t\t// Draw line / bar\r\n\t\t\tif ( this._mode == 10 ) {\r\n\t\t\t\tthis._canvasCtx.lineTo( bar.posX, analyzerHeight - barHeight );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ( this._mode > 0 ) {\r\n\t\t\t\t\tif ( isLedDisplay )\r\n\t\t\t\t\t\tposX += Math.max( this._ledOptions.spaceH / 2, this._barSpacePx / 2 );\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ( this._barSpace == 0 ) {\r\n\t\t\t\t\t\t\tposX |= 0;\r\n\t\t\t\t\t\t\tif ( i > 0 && posX > this._analyzerBars[ i - 1 ].posX + width ) {\r\n\t\t\t\t\t\t\t\tposX--;\r\n\t\t\t\t\t\t\t\tadjWidth++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tposX += this._barSpacePx / 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isLumiBars ) {\r\n\t\t\t\t\tthis._canvasCtx.fillRect( posX, 0, adjWidth, this._canvas.height );\r\n\t\t\t\t\tthis._canvasCtx.globalAlpha = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._canvasCtx.fillRect( posX, analyzerHeight, adjWidth, -barHeight );\r\n\t\t\t}\r\n\r\n\t\t\t// Draw peak\r\n\t\t\tif ( bar.peak > 0 ) {\r\n\t\t\t\tif ( this.showPeaks && ! isLumiBars ) {\r\n\t\t\t\t\tif ( isLedDisplay ) {\r\n\t\t\t\t\t\tthis._canvasCtx.fillRect(\r\n\t\t\t\t\t\t\tposX,\r\n\t\t\t\t\t\t\t( this._ledOptions.nLeds - bar.peak / ( analyzerHeight + this._ledOptions.spaceV ) * this._ledOptions.nLeds | 0 ) * ( this._ledOptions.ledHeight + this._ledOptions.spaceV ),\r\n\t\t\t\t\t\t\twidth,\r\n\t\t\t\t\t\t\tthis._ledOptions.ledHeight\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._canvasCtx.fillRect( posX, analyzerHeight - bar.peak, adjWidth, 2 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( bar.hold )\r\n\t\t\t\t\tbar.hold--;\r\n\t\t\t\telse {\r\n\t\t\t\t\tbar.accel++;\r\n\t\t\t\t\tbar.peak -= bar.accel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // for ( let i = 0; i < l; i++ )\r\n\r\n\t\tif ( this._mode == 10 ) { // fill area\r\n\t\t\tthis._canvasCtx.lineTo( bar.posX + this.lineWidth, analyzerHeight );\r\n\r\n\t\t\tif ( this.lineWidth > 0 ) {\r\n\t\t\t\tthis._canvasCtx.lineWidth = this.lineWidth;\r\n\t\t\t\tthis._canvasCtx.strokeStyle = this._canvasCtx.fillStyle;\r\n\t\t\t\tthis._canvasCtx.stroke();\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.fillAlpha > 0 ) {\r\n\t\t\t\tthis._canvasCtx.globalAlpha = this.fillAlpha;\r\n\t\t\t\tthis._canvasCtx.fill();\r\n\t\t\t\tthis._canvasCtx.globalAlpha = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ( isLedDisplay ) // applies LEDs mask over the canvas\r\n\t\t\tthis._canvasCtx.drawImage( this._ledsMask, 0, 0 );\r\n\r\n\t\t// Reflex effect\r\n\t\tif ( this._reflexRatio > 0 && ! isLumiBars ) {\r\n\t\t\tlet posY, height;\r\n\t\t\tif ( this.reflexFit ) {\r\n\t\t\t\tposY   = 0;\r\n\t\t\t\theight = this._canvas.height - analyzerHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tposY   = this._canvas.height - analyzerHeight * 2;\r\n\t\t\t\theight = analyzerHeight;\r\n\t\t\t}\r\n\r\n\t\t\tthis._canvasCtx.fillStyle = '#000';\r\n\t\t\tthis._canvasCtx.fillRect( 0, analyzerHeight, this._canvas.width, this._canvas.height - analyzerHeight );\r\n\t\t\tthis._canvasCtx.globalAlpha = this.reflexAlpha;\r\n\t\t\tthis._canvasCtx.setTransform( 1, 0, 0, -1, 0, this._canvas.height );\r\n\t\t\tthis._canvasCtx.drawImage( this._canvas, 0, 0, this._canvas.width, analyzerHeight, 0, posY, this._canvas.width, height );\r\n\t\t\tthis._canvasCtx.globalAlpha = 1;\r\n\t\t\tthis._canvasCtx.setTransform();\r\n\t\t}\r\n\r\n\t\tif ( this.showScale )\r\n\t\t\tthis._canvasCtx.drawImage( this._labels, 0, this._canvas.height - this._labels.height );\r\n\r\n\t\tthis._frame++;\r\n\r\n\t\tconst elapsed = timestamp - this._time;\r\n\r\n\t\tif ( elapsed >= 1000 ) {\r\n\t\t\tthis._fps = this._frame / ( elapsed / 1000 );\r\n\t\t\tthis._frame = 0;\r\n\t\t\tthis._time = timestamp;\r\n\t\t}\r\n\t\tif ( this.showFPS ) {\r\n\t\t\tconst size = 20 * this._pixelRatio;\r\n\t\t\tthis._canvasCtx.font = `bold ${size}px sans-serif`;\r\n\t\t\tthis._canvasCtx.fillStyle = '#0f0';\r\n\t\t\tthis._canvasCtx.textAlign = 'right';\r\n\t\t\tthis._canvasCtx.fillText( Math.round( this._fps ), this._canvas.width - size, size * 2 );\r\n\t\t}\r\n\r\n\t\tif ( this.onCanvasDraw ) {\r\n\t\t\tthis._canvasCtx.save();\r\n\t\t\tthis.onCanvasDraw( this );\r\n\t\t\tthis._canvasCtx.restore();\r\n\t\t}\r\n\r\n\t\t// schedule next canvas update\r\n\t\tthis._animationReq = requestAnimationFrame( timestamp => this._draw( timestamp ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Find the FFT bin which represents a given frequency\r\n\t *\r\n\t * @param {number} freq   Frequency in hertz\r\n\t * @param {string} [func] Rounding function: 'floor', 'round' (default) or 'ceil'\r\n\t * @returns {number}      FFT data array index which closely represents the given frequency\r\n\t */\r\n\t_findFrequencyBin( freq, func ) {\r\n\t\tconst bin = freq * this._analyzer.fftSize / this._audioCtx.sampleRate;\r\n\r\n\t\tif ( ! ['floor','ceil'].includes( func ) )\r\n\t\t\tfunc = 'round';\r\n\r\n\t\treturn Math[ func ]( bin );\r\n\t}\r\n\r\n\t/**\r\n\t * Find the frequency represented by a given FFT bin\r\n\t *\r\n\t * @param {number} bin FFT data array index\r\n\t * @returns {number}   Frequency in hertz represented by the given FFT bin\r\n\t */\r\n\t_findBinFrequency( bin ) {\r\n\t\treturn bin * this._audioCtx.sampleRate / this._analyzer.fftSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Generate gradients\r\n\t */\r\n\t_generateGradients() {\r\n\t\tlet grad;\r\n\r\n\t\tconst analyzerHeight = ( this._lumiBars && this._mode % 10 ) ? this._canvas.height : this._canvas.height * ( 1 - this._reflexRatio ) | 0;\r\n\r\n\t\tObject.keys( this._gradients ).forEach( key => {\r\n\t\t\tif ( this._gradients[ key ].dir && this._gradients[ key ].dir == 'h' )\r\n\t\t\t\tgrad = this._canvasCtx.createLinearGradient( 0, 0, this._canvas.width, 0 );\r\n\t\t\telse\r\n\t\t\t\tgrad = this._canvasCtx.createLinearGradient( 0, 0, 0, analyzerHeight );\r\n\r\n\t\t\tif ( this._gradients[ key ].colorStops ) {\r\n\t\t\t\tthis._gradients[ key ].colorStops.forEach( ( colorInfo, index ) => {\r\n\t\t\t\t\tif ( typeof colorInfo == 'object' )\r\n\t\t\t\t\t\tgrad.addColorStop( colorInfo.pos, colorInfo.color );\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tgrad.addColorStop( index / ( this._gradients[ key ].colorStops.length - 1 ), colorInfo );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._gradients[ key ].gradient = grad; // save the generated gradient back into the gradients array\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Precalculate the actual X-coordinate on screen for each analyzer bar\r\n\t *\r\n\t * Since the frequency scale is logarithmic, each position in the X-axis actually represents a power of 10.\r\n\t * To improve performace, the position of each frequency is calculated in advance and stored in an array.\r\n\t * Canvas space usage is optimized to accommodate exactly the frequency range the user needs.\r\n\t * Positions need to be recalculated whenever the frequency range, FFT size or canvas size change.\r\n\t *\r\n\t *                              +-------------------------- canvas --------------------------+\r\n\t *                              |                                                            |\r\n\t *    |-------------------|-----|-------------|-------------------!-------------------|------|------------|\r\n\t *    1                  10     |            100                  1K                 10K     |           100K (Hz)\r\n\t * (10^0)              (10^1)   |          (10^2)               (10^3)              (10^4)   |          (10^5)\r\n\t *                              |-------------|<--- bandWidth --->|--------------------------|\r\n\t *                  minFreq--> 20                   (pixels)                                22K <--maxFreq\r\n\t *                          (10^1.3)                                                     (10^4.34)\r\n\t *                           minLog\r\n\t */\r\n\t_precalculateBarPositions() {\r\n\r\n\t\tif ( ! this._initDone )\r\n\t\t\treturn;\r\n\r\n\t\tlet minLog, bandWidth;\r\n\r\n\t\tthis._analyzerBars = [];\r\n\r\n\t\tif ( this._mode % 10 == 0 ) {\r\n\t\t// Discrete frequencies or area fill modes\r\n\t\t\tthis._barWidth = 1;\r\n\r\n\t\t\tminLog = Math.log10( this._minFreq );\r\n\t\t\tbandWidth = this._canvas.width / ( Math.log10( this._maxFreq ) - minLog );\r\n\r\n\t\t\tconst minIndex = this._findFrequencyBin( this._minFreq, 'floor' );\r\n\t\t\tconst maxIndex = Math.min( this._findFrequencyBin( this._maxFreq ), this._analyzer.frequencyBinCount - 1 );\r\n\r\n\t \t\tlet lastPos = -999;\r\n\r\n\t\t\tfor ( let i = minIndex; i <= maxIndex; i++ ) {\r\n\t\t\t\tlet freq = this._findBinFrequency( i ); // frequency represented in this bin\r\n\t\t\t\tlet pos = Math.round( bandWidth * ( Math.log10( freq ) - minLog ) ); // avoid fractionary pixel values\r\n\r\n\t\t\t\t// if it's on a different X-coordinate, create a new bar for this frequency\r\n\t\t\t\tif ( pos > lastPos ) {\r\n\t\t\t\t\tthis._analyzerBars.push( { posX: pos, dataIdx: i, endIdx: 0, factor: 0, peak: 0, hold: 0, accel: 0 } );\r\n\t\t\t\t\tlastPos = pos;\r\n\t\t\t\t} // otherwise, add this frequency to the last bar's range\r\n\t\t\t\telse if ( this._analyzerBars.length )\r\n\t\t\t\t\tthis._analyzerBars[ this._analyzerBars.length - 1 ].endIdx = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t// Octave bands modes\r\n\r\n\t\t\t// how many notes grouped in each band?\r\n\t\t\tlet groupNotes;\r\n\r\n\t\t\tif ( this._mode == 8 )\r\n\t\t\t\tgroupNotes = 24;\r\n\t\t\telse if ( this._mode == 7 )\r\n\t\t\t\tgroupNotes = 12;\r\n\t\t\telse if ( this._mode == 6 )\r\n\t\t\t\tgroupNotes = 8;\r\n\t\t\telse if ( this._mode == 5 )\r\n\t\t\t\tgroupNotes = 6;\r\n\t\t\telse\r\n\t\t\t\tgroupNotes = this._mode; // for modes 1, 2, 3 and 4\r\n\r\n\t\t\t// generate a table of frequencies based on the equal tempered scale\r\n\r\n\t\t\tconst root24 = 2 ** ( 1 / 24 );\r\n\t\t\tconst c0 = 440 * root24 ** -114; // ~16.35 Hz\r\n\r\n\t\t\tlet temperedScale = [];\r\n\t\t\tlet i = 0;\r\n\t\t\tlet freq;\r\n\r\n\t\t\twhile ( ( freq = c0 * root24 ** i ) <= this._maxFreq ) {\r\n\t\t\t\tif ( freq >= this._minFreq && i % groupNotes == 0 )\r\n\t\t\t\t\ttemperedScale.push( freq );\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\r\n\t\t\tminLog = Math.log10( temperedScale[0] );\r\n\t\t\tbandWidth = this._canvas.width / ( Math.log10( temperedScale[ temperedScale.length - 1 ] ) - minLog );\r\n\r\n\t\t\t// divide canvas space by the number of frequencies (bars) to display\r\n\t\t\tthis._barWidth = this._canvas.width / temperedScale.length;\r\n\t\t\tthis._calculateBarSpacePx();\r\n\r\n\t\t\tlet prevBin = 0;  // last bin included in previous frequency band\r\n\t\t\tlet prevIdx = -1; // previous bar FFT array index\r\n\t\t\tlet nBars   = 0;  // count of bars with the same index\r\n\r\n\t\t\ttemperedScale.forEach( ( freq, index ) => {\r\n\t\t\t\t// which FFT bin represents this frequency?\r\n\t\t\t\tconst bin = this._findFrequencyBin( freq );\r\n\r\n\t\t\t\tlet idx, nextBin;\r\n\t\t\t\t// start from the last used FFT bin\r\n\t\t\t\tif ( prevBin > 0 && prevBin + 1 <= bin )\r\n\t\t\t\t\tidx = prevBin + 1;\r\n\t\t\t\telse\r\n\t\t\t\t\tidx = bin;\r\n\r\n\t\t\t\t// FFT does not provide many coefficients for low frequencies, so several bars may end up using the same data\r\n\t\t\t\tif ( idx == prevIdx ) {\r\n\t\t\t\t\tnBars++;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// update previous bars using the same index with a smoothing factor\r\n\t\t\t\t\tif ( nBars > 1 ) {\r\n\t\t\t\t\t\tfor ( let i = 1; i <= nBars; i++ )\r\n\t\t\t\t\t\t\tthis._analyzerBars[ this._analyzerBars.length - i ].factor = ( nBars - i ) / nBars;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tprevIdx = idx;\r\n\t\t\t\t\tnBars = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevBin = nextBin = bin;\r\n\t\t\t\t// check if there's another band after this one\r\n\t\t\t\tif ( temperedScale[ index + 1 ] !== undefined ) {\r\n\t\t\t\t\tnextBin = this._findFrequencyBin( temperedScale[ index + 1 ] );\r\n\t\t\t\t\t// and use half the bins in between for this band\r\n\t\t\t\t\tif ( nextBin - bin > 1 )\r\n\t\t\t\t\t\tprevBin += Math.round( ( nextBin - bin ) / 2 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst endIdx = prevBin - idx > 0 ? prevBin : 0;\r\n\r\n\t\t\t\tthis._analyzerBars.push( {\r\n\t\t\t\t\tposX: index * this._barWidth,\r\n\t\t\t\t\tdataIdx: idx,\r\n\t\t\t\t\tendIdx,\r\n//\t\t\t\t\tfreq, // nominal frequency for this band\r\n//\t\t\t\t\trange: [ this._findBinFrequency( idx ), this._findBinFrequency( endIdx || idx ) ], // actual range of frequencies\r\n\t\t\t\t\tfactor: 0,\r\n\t\t\t\t\tpeak: 0,\r\n\t\t\t\t\thold: 0,\r\n\t\t\t\t\taccel: 0\r\n\t\t\t\t} );\r\n\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tthis._createLedMask();\r\n\r\n\t\t// Create the X-axis scale in the auxiliary canvas\r\n\r\n\t\tthis._labels.width |= 0; // clear canvas\r\n\t\tthis._labelsCtx.fillStyle = '#000c';\r\n\t\tthis._labelsCtx.fillRect( 0, 0, this._labels.width, this._labels.height );\r\n\r\n\t\tthis._labelsCtx.fillStyle = '#fff';\r\n\t\tthis._labelsCtx.font = `${ this._labels.height / 2 }px sans-serif`;\r\n\t\tthis._labelsCtx.textAlign = 'center';\r\n\r\n\t\tconst freqLabels = [ 16, 31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16000 ];\r\n\r\n\t\tfor ( const freq of freqLabels ) {\r\n\t\t\tthis._labelsCtx.fillText(\r\n\t\t\t\t( freq >= 1000 ) ? `${ freq / 1000 }k` : freq,\r\n\t\t\t\tbandWidth * ( Math.log10( freq ) - minLog ),\r\n\t\t\t\tthis._labels.height * .75\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to change canvas dimensions on demand\r\n\t */\r\n\t_setCanvas( reason ) {\r\n\t\tif ( ! this._initDone )\r\n\t\t\treturn;\r\n\r\n\t\tthis._pixelRatio = window.devicePixelRatio; // for Retina / HiDPI devices\r\n\r\n\t\tif ( this._loRes )\r\n\t\t\tthis._pixelRatio /= 2;\r\n\r\n\t\tthis._fsWidth = Math.max( window.screen.width, window.screen.height ) * this._pixelRatio;\r\n\t\tthis._fsHeight = Math.min( window.screen.height, window.screen.width ) * this._pixelRatio;\r\n\r\n\t\tif ( this.isFullscreen ) {\r\n\t\t\tthis._canvas.width = this._fsWidth;\r\n\t\t\tthis._canvas.height = this._fsHeight;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._canvas.width = ( this._width || this._container.clientWidth || this._defaultWidth ) * this._pixelRatio;\r\n\t\t\tthis._canvas.height = ( this._height || this._container.clientHeight || this._defaultHeight ) * this._pixelRatio;\r\n\t\t}\r\n\r\n\t\t// workaround for wrong dPR reported on Android TV\r\n\t\tif ( this._pixelRatio == 2 && window.screen.height <= 540 )\r\n\t\t\tthis._pixelRatio = 1;\r\n\r\n\t\t// clear the canvas\r\n\t\tthis._canvasCtx.fillStyle = '#000';\r\n\t\tthis._canvasCtx.fillRect( 0, 0, this._canvas.width, this._canvas.height );\r\n\r\n\t\t// set lineJoin property for area fill mode (this is reset whenever the canvas size changes)\r\n\t\tthis._canvasCtx.lineJoin = 'bevel';\r\n\r\n\t\t// (re)generate gradients\r\n\t\tthis._generateGradients();\r\n\r\n\t\t// update LED mask canvas dimensions\r\n\t\tthis._ledsMask.width = this._canvas.width;\r\n\t\tthis._ledsMask.height = this._canvas.height;\r\n\r\n\t\t// update labels canvas dimensions\r\n\t\tthis._labels.width = this._canvas.width;\r\n\t\tthis._labels.height = this._pixelRatio * ( this.isFullscreen ? 40 : 20 );\r\n\r\n\t\t// calculate bar positions and led options\r\n\t\tthis._precalculateBarPositions();\r\n\r\n\t\t// call callback function, if defined\r\n\t\tif ( this.onCanvasResize )\r\n\t\t\tthis.onCanvasResize( reason, this );\r\n\t}\r\n\r\n\t/**\r\n\t * Set object properties\r\n\t */\r\n\t_setProperties( options, defaults ) {\r\n\r\n\t\tconst callbacks = [ 'onCanvasDraw', 'onCanvasResize' ];\r\n\r\n\t\t// audioCtx is set only at initialization; we handle 'start' after setting all other properties\r\n\t\tconst ignore = [ 'audioCtx', 'start' ];\r\n\r\n\t\tif ( defaults )\r\n\t\t\toptions = Object.assign( defaults, options );\r\n\r\n\t\tfor ( const prop of Object.keys( options ) ) {\r\n\t\t\tif ( callbacks.indexOf( prop ) !== -1 && typeof options[ prop ] !== 'function' ) // check invalid callback\r\n\t\t\t\tthis[ prop ] = undefined;\r\n\t\t\telse if ( ignore.indexOf( prop ) === -1 ) // skip ignored properties\r\n\t\t\t\tthis[ prop ] = options[ prop ];\r\n\t\t}\r\n\r\n\t\tif ( options.start !== undefined )\r\n\t\t\tthis.toggleAnalyzer( options.start );\r\n\t}\r\n\r\n}\r\n\r\n/* Custom error class */\r\n\r\nclass AudioMotionError extends Error {\r\n\tconstructor( code, message ) {\r\n\t\tsuper( message );\r\n\t\tthis.name = 'AudioMotionError';\r\n\t\tthis.code = code;\r\n\t}\r\n}\r\n","<template>\n  <div :ref=\"'audioMotion-' + this._uid\"></div>\n</template>\n<script>\nimport AudioMotionAnalyzer from \"audiomotion-analyzer\";\n\nexport default {\n  props: [\"stream\", \"options\"],\n  watch: {\n    stream() {\n      if (this.stream && this.stream.getAudioTracks()) {\n        var audioCtx = new AudioContext();\n        var source = audioCtx.createMediaStreamSource(this.stream);\n        const audioMotion = new AudioMotionAnalyzer(\n          this.$refs[\"audioMotion\" + this._uid],\n          this.options\n        );\n        let sourceMic = audioMotion.audioCtx.createMediaStreamSource(\n          this.stream\n        );\n        sourceMic.connect(audioMotion.analyzer);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AudioMotion.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AudioMotion.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./AudioMotion.vue?vue&type=template&id=35c9ffe8&\"\nimport script from \"./AudioMotion.vue?vue&type=script&lang=js&\"\nexport * from \"./AudioMotion.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import AudioMotion from './AudioMotion.vue'\n\nexport default AudioMotion","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}